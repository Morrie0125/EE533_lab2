`timescale 1ns/1ps

module testALUU;

// Declare inputs to the ALU as regs, outputs as wires
reg  [2:0]  sel = 3'b000;
reg  [31:0] x   = 32'b00000000000000000000000000000000;
reg  [31:0] y   = 32'b00000000000000000000000000000000;
wire [31:0] z;

// Instantiate your ALU
ALUU UUT (
    .sel (sel),
    .x   (x),
    .y   (y),
    .z   (z)
);

// These file handles and error counters are auto‚Äêgenerated
integer TX_FILE  = 0;
integer TX_ERROR = 0;

// This block handles annotation events for the waveform display
initial begin  // Annotation process
    #0;
    ANNOTATE_z;        // Call the annotation task
    forever begin
        #50;
        ANNOTATE_z;    // Periodically update wave annotations
        #50;
    end
end

// This block opens and closes an annotation file, then finishes simulation
initial begin
    TX_FILE = $fopen("C:\\Documents and Settings\\student\\fulladder\\testALUU.ano");
    
    // Let the simulation run until 1000 ns
    #1000
    $display("Success! Annotation simulation Complete.");
    $fdisplay(TX_FILE, "Total[%d]", TX_ERROR);
    $fclose(TX_FILE);
    $finish;
end

// Main stimulus for x, y, sel signals
initial begin
    // -------------- Current Time: 100 ns
    #100;
    x = 32'b000100100100110100100110100111000; 
    y = 32'b0001001001001101001001101001110001;

    // -------------- Current Time: 300 ns
    #200;
    sel = 3'b001;      // Switch to SUB (example)

    // -------------- Current Time: 500 ns
    #200;
    sel = 3'b010;      // AND

    // -------------- Current Time: 700 ns
    #200;
    sel = 3'b011;      // OR

    // -------------- Current Time: 900 ns
    #200;
    sel = 3'b100;      // SHIFT (example)
end
endmodule
